{"version":3,"sources":["../node_modules/peerjs/dist sync","Components/RenderChat.js","Components/ChatInput.js","Components/Spin.js","Components/WaitingToConnect.js","service/connectionServiceUtil.js","styles/media.js","styles/styles.js","Chat/Chat.js","Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","RenderChat","chat","Wrapper","map","i","Row","User","self","user","Text","text","styled","div","props","ChatInput","onChangeText","sendMessgae","currentText","InputStyled","type","onChange","onKeyDown","key","value","onClick","Input","Spinner","CopyLink","ButtonStyled","Button","withRouter","history","push","window","location","href","connect","peer_id","peer","setValue","onReceiveData","connection","console","log","conn","on","connected","sizes","xlarge","large","medium","small","media","Object","reduce","accumulator","label","emSize","css","Container","Card","Title","Typography","Chat","data","callback","setState","target","state","handleTextChange","event","Peer","my_id","initialized","this","search","chatId","URLSearchParams","get","ContainerStyled","CardStyled","level","uuidv4","send","Component","App","path","component","Home","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.849a6dad.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 107;","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport function RenderChat({ chat }) {\n  return (\n    <Wrapper>\n      {chat.map((i) => {\n        return (\n          <Row key={i.id}>\n            <User self={i.self}>{i.user}</User> : <Text>{i.text}</Text>\n          </Row>\n        );\n      })}\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  overflow: auto;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst User = styled.div`\n  font-weight: bold;\n  color: ${(props) => (props.self ? \"#7b3c3c\" : \"#515e75\")};\n`;\n\nconst Text = styled.div`\n  margin-left: 10px;\n  flex: 1;\n`;\n","import React from \"react\";\nimport { Input, Button } from \"antd\";\nimport styled from \"styled-components\";\n\nexport function ChatInput({ onChangeText, sendMessgae, currentText }) {\n  return (\n    <Row>\n      <InputStyled\n        type=\"text\"\n        onChange={onChangeText}\n        onKeyDown={(e) => e.key === \"Enter\" && sendMessgae()}\n        value={currentText}\n      />\n      <Button onClick={sendMessgae}>send</Button>\n    </Row>\n  );\n}\nconst InputStyled = styled(Input)`\n  width: 90%;\n  &:focus {\n    box-shadow: none;\n  }\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-top: 10px;\n`;\n","import { Spin } from \"antd\";\nimport styled from \"styled-components\";\n\nexport function Spinner() {\n  return (\n    <Wrapper>\n      <Spin />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  background: rgba(0, 0, 0, 0.05);\n  border-radius: 4px;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n`;\n","import styled from \"styled-components\";\nimport { Button } from \"antd\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction WaitingToConnect(props) {\n  return (\n    <>\n      <ButtonStyled onClick={() => props.history.push(\"/\")}>Home</ButtonStyled>\n      Please send this url to a friend to start chatting.\n      <CopyLink> {window.location.href}</CopyLink>\n    </>\n  );\n}\nconst CopyLink = styled.div`\n  color: rebeccapurple;\n  font-family: helvetica;\n  text-decoration: none;\n  :hover {\n    text-decoration: underline;\n  }\n`;\nconst ButtonStyled = styled(Button)`\n  width: max-content;\n`;\n\nexport default withRouter(WaitingToConnect);\n","import { v4 as uuidv4 } from \"uuid\";\n\nexport const initializePeerMethods = (peer, setValue, onReceiveData, self) => {\n  let id;\n  peer.on(\"open\", (id) => {\n    console.log(\"My peer ID is: \", id);\n    id = id;\n    setValue({\n      my_id: id,\n      initialized: true,\n    });\n\n    const state = self.props.location.search;\n    const urlParams = new URLSearchParams(state);\n    const chatId = urlParams.get(\"id\");\n    console.log(\"Remote user \", chatId);\n    if (chatId != null) {\n      connect(chatId, peer, setValue, onReceiveData);\n    } else {\n      self.props.history.push(`/chat?id=${id}`);\n    }\n  });\n\n  peer.on(\"connection\", (connection) => {\n    console.log(\"someone connected\");\n    console.log(connection);\n    setValue({ conn: connection }, () => {\n      self.state.conn.on(\"open\", () => {\n        setValue({ connected: true, peer_id: connection.peer });\n      });\n      self.state.conn.on(\"data\", onReceiveData);\n    });\n  });\n  peer.on(\"error\", () => {\n    self.props.history.push(`/`);\n  });\n};\n\nexport const connect = (peer_id, peer, setValue, onReceiveData) => {\n  const connection = peer.connect(peer_id);\n  console.log(\"Connection is \", connection);\n  setValue(\n    {\n      conn: connection,\n      currentText: \"\",\n      peer_id: peer_id,\n    },\n    () => {\n      connection.on(\"open\", () => {\n        setValue({\n          connected: true,\n        });\n      });\n      connection.on(\"data\", onReceiveData);\n    }\n  );\n};\n\nexport const sendMessgae = (currentText, my_id, conn, chat, setValue) => {\n  if (currentText) {\n    const data = {\n      text: currentText,\n      id: uuidv4(),\n      user: my_id,\n      self: true,\n    };\n    conn.send(data);\n    setValue({\n      chat: [...chat, data],\n      currentText: \"\",\n    });\n  }\n};\n","import { css } from \"styled-components\";\n\nconst sizes = {\n  xlarge: 1200,\n  large: 992,\n  medium: 768,\n  small: 576,\n};\n\n// iterate through the sizes and create a media template\nexport const media = Object.keys(sizes).reduce((accumulator, label) => {\n  // use em in breakpoints to work properly cross-browser and support users\n  // changing their browsers font-size: https://zellwk.com/blog/media-query-units/\n  const emSize = sizes[label] / 16;\n  accumulator[label] = (...args) => css`\n    @media (max-width: ${emSize}em) {\n      ${css(...args)};\n    }\n  `;\n  return accumulator;\n}, {});\n","import styled from \"styled-components\";\nimport { media } from \"./media\";\nexport const Container = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Card = styled.div`\n  border: 1px solid #f0f0f0;\n  box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\n  min-width: 40%;\n  border-radius: 4px;\n  padding: 20px;\n\n  ${media.small`\n  min-width: 90%;\n  width:90%;\n            height: 90%;\n          `};\n`;\n","import React, { Component } from \"react\";\nimport Peer from \"peerjs\";\nimport { Typography } from \"antd\";\nimport styled from \"styled-components\";\n\nimport { RenderChat } from \"../Components/RenderChat\";\nimport { ChatInput } from \"../Components/ChatInput\";\nimport { Spinner } from \"../Components/Spin\";\nimport WaitingToConnect from \"../Components/WaitingToConnect\";\n\nimport {\n  initializePeerMethods,\n  sendMessgae,\n} from \"../service/connectionServiceUtil\";\nimport { Container, Card } from \"../styles/styles\";\nimport { media } from \"../styles/media\";\nconst { Title } = Typography;\n\nexport class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      peer: new Peer(),\n      my_id: \"\",\n      peer_id: \"\",\n      initialized: false,\n      connected: false,\n      chat: [],\n      currentText: \"\",\n    };\n  }\n\n  componentDidMount() {\n    initializePeerMethods(\n      this.state.peer,\n      this.setValue,\n      this.onReceiveData,\n      this\n    );\n  }\n\n  setValue = (data, callback) => {\n    this.setState(data, callback);\n  };\n\n  onChangeText = (e) => {\n    this.setState({ currentText: e.target.value });\n  };\n\n  onReceiveData = (data) => {\n    this.setState({\n      chat: [\n        ...this.state.chat,\n        {\n          text: data.text,\n          id: data.id,\n          user: data.user,\n        },\n      ],\n    });\n  };\n\n  handleTextChange = (event) => {\n    this.setState({\n      peer_id: event.target.value,\n    });\n  };\n\n  render() {\n    const {\n      my_id,\n      initialized,\n      connected,\n      currentText,\n      conn,\n      chat,\n    } = this.state;\n    if (!initialized) {\n      return <Spinner />;\n    }\n    return (\n      <ContainerStyled>\n        <CardStyled>\n          <Title level={3}>Chat WebRTC</Title>\n          <p>\n            Talking to User <b>{this.state.peer_id}</b>\n          </p>\n          {connected ? (\n            <>\n              <RenderChat chat={chat} />\n              <ChatInput\n                onChangeText={this.onChangeText}\n                sendMessgae={() =>\n                  sendMessgae(currentText, my_id, conn, chat, this.setValue)\n                }\n                currentText={currentText}\n              />\n            </>\n          ) : (\n            <WaitingToConnect />\n          )}\n        </CardStyled>\n      </ContainerStyled>\n    );\n  }\n}\nconst ContainerStyled = styled(Container)`\n  justify-content: flex-start;\n  height: 100%;\n  width: inherit;\n`;\n\nconst CardStyled = styled(Card)`\n  width: 60%;\n  height: 80%;\n  margin: 30px;\n  display: flex;\n  flex-direction: column;\n  ${media.small`\n  min-width: 90%;\n  width:90%;\n            height: 90%;\n          `};\n`;\n","import { withRouter } from \"react-router-dom\";\nimport { Button, Typography } from \"antd\";\nimport { Container, Card } from \"../styles/styles\";\nconst { Title } = Typography;\n\nfunction Home(props) {\n  return (\n    <Container>\n      <Card>\n        <Title level={3}>Let's Chat</Title>\n        <Button type=\"primary\" onClick={() => props.history.push(\"/chat\")}>\n          Create Room\n        </Button>\n      </Card>\n    </Container>\n  );\n}\n\nexport default withRouter(Home);\n","import { Chat } from \"./Chat/Chat\";\nimport Home from \"./Home/Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/chat\" component={Chat} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}